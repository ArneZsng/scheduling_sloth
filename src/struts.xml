<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
		"-//Apache Software Foundation//DTD Struts Configuration 2.1//EN"
		"http://struts.apache.org/dtds/struts-2.1.dtd">

<struts>
    <constant name="struts.xwork.chaining.copyErrors" value="true"/>
    <constant name="struts.xwork.chaining.copyFieldErrors" value="true"/>
    <constant name="struts.xwork.chaining.copyMessages" value="true"/>
	<package name="default" extends="tiles-default">
        <interceptors>
            <interceptor name="redirectMessage"
                         class="de.nak.scheduling_sloth.interceptor.RedirectMessageInterceptor" />
            <interceptor-stack name="slothInterceptorStack">
                <interceptor-ref name="exception"/>
                <interceptor-ref name="alias"/>
                <interceptor-ref name="i18n"/>
                <interceptor-ref name="checkbox"/>
                <interceptor-ref name="multiselect"/>
                <interceptor-ref name="params">
                    <param name="excludeParams">dojo\..*,^struts\..*</param>
                </interceptor-ref>
                <interceptor-ref name="servletConfig"/>
                <interceptor-ref name="prepare"/>
                <interceptor-ref name="chain"/>
                <interceptor-ref name="modelDriven"/>
                <interceptor-ref name="fileUpload"/>
                <interceptor-ref name="staticParams"/>
                <interceptor-ref name="actionMappingParams"/>
                <interceptor-ref name="redirectMessage" />
                <interceptor-ref name="params">
                    <param name="excludeParams">dojo\..*,^struts\..*</param>
                </interceptor-ref>
                <interceptor-ref name="conversionError"/>
                <interceptor-ref name="validation">
                    <param name="excludeMethods">add, load, delete, cancel</param>
                </interceptor-ref>
                <interceptor-ref name="workflow">
                    <param name="excludeMethods">input,back,cancel,browse</param>
                </interceptor-ref>
            </interceptor-stack>
        </interceptors>
        <default-interceptor-ref name="slothInterceptorStack" />

        <global-exception-mappings>
            <exception-mapping exception="java.lang.Exception" result="error" />
        </global-exception-mappings>
        
        <!-- Action that displays the list of lecturers. -->
		<action name="ShowLecturerList" class="de.nak.scheduling_sloth.action.ShowLecturerListAction">
            <result type="tiles">lecturerList</result>
            <result type="tiles" name="input">lecturerList</result>
		</action>

        <!-- Action that displays a single lecturer. -->
        <action name="ShowLecturer" class="de.nak.scheduling_sloth.action.ShowLecturerAction" method="execute">
            <result type="tiles" name="success">lecturerShow</result>
            <result type="redirectAction" name="error">ShowLecturerList.action</result>
        </action>

		<!-- Shows the empty form for a new lecturer. -->
		<action name="AddLecturer" class="de.nak.scheduling_sloth.action.LecturerAction" method="add">
			<result type="tiles">lecturerForm</result>
		</action>

		<!-- Saves the new or updated lecturer into the database and shows the lecturer list again. -->
		<action name="SaveLecturer" class="de.nak.scheduling_sloth.action.LecturerAction" method="save">
			<result type="redirectAction">ShowLecturerList.action</result>
			<result type="tiles" name="input">lecturerForm</result>
		</action>

		<!-- Loads a existing lecturer and shows it in the lecturer form. -->
		<action name="EditLecturer" class="de.nak.scheduling_sloth.action.LecturerAction" method="load">
            <result type="redirectAction" name="error">ShowLecturerList.action</result>
            <result type="tiles" name="success">lecturerForm</result>
			<result type="chain" name="input">ShowLecturerList</result>
		</action>

		<!-- Deletes the selected lecturer and shows the lecturer list again. -->
		<action name="DeleteLecturer" class="de.nak.scheduling_sloth.action.LecturerAction" method="delete">
            <result type="redirectAction" name="error">ShowLecturerList.action</result>
            <result name="success" type="redirectAction">ShowLecturerList.action</result>
			<result type="chain" name="input">ShowLecturerList</result>
		</action>

		<!-- Action for the cancel button. Is required to avoid stack traces in log. -->
		<action name="CancelLecturer" class="de.nak.scheduling_sloth.action.LecturerAction" method="cancel">
			<result type="redirectAction">ShowLecturerList.action</result>
		</action>

        <!-- Action that displays the list of rooms. -->
        <action name="ShowRoomList" class="de.nak.scheduling_sloth.action.ShowRoomListAction">
            <result type="tiles">roomList</result>
            <result type="tiles" name="input">roomList</result>
        </action>

        <!-- Action that displays the list of rooms. -->
        <action name="ShowRoomListAvailable" class="de.nak.scheduling_sloth.action.ShowRoomListAvailableAction">
            <result name="error" type="redirect">Error</result>
            <result type="tiles" name="input">roomListAvailable</result>
            <result type="tiles" name="success">roomListAvailable</result>
        </action>

        <!-- Action that displays a single room. -->
        <action name="ShowRoom" class="de.nak.scheduling_sloth.action.ShowRoomAction" method="execute">
            <result type="redirectAction" name="error">ShowRoomList.action</result>
            <result name="success" type="tiles">roomShow</result>
        </action>

        <!-- Shows the empty form for a new room. -->
        <action name="AddRoom" class="de.nak.scheduling_sloth.action.RoomAction" method="add">
            <result type="tiles">roomForm</result>
        </action>

        <!-- Saves the new or updated room into the database and shows the room list again. -->
        <action name="SaveRoom" class="de.nak.scheduling_sloth.action.RoomAction" method="save">
            <result type="redirect" name="success">ShowRoomList.action</result>
            <result type="tiles" name="input">roomForm</result>
        </action>

        <!-- Loads a existing room and shows it in the room form. -->
        <action name="EditRoom" class="de.nak.scheduling_sloth.action.RoomAction" method="load">
            <result type="redirectAction" name="error">ShowRoomList.action</result>
            <result type="tiles" name="success">roomForm</result>
            <result type="redirectAction" name="input">ShowRoomList.action</result>
        </action>

        <!-- Deletes the selected room and shows the room list again. -->
        <action name="DeleteRoom" class="de.nak.scheduling_sloth.action.RoomAction" method="delete">
            <result type="redirectAction" name="error">ShowRoomList.action</result>
            <result name="success" type="redirectAction">ShowRoomList.action</result>
            <result name="input" type="chain" >ShowRoomList</result>
        </action>

        <!-- Action for the cancel button. Is required to avoid stack traces in log. -->
        <action name="CancelRoom" class="de.nak.scheduling_sloth.action.RoomAction" method="cancel">
            <result type="redirect">ShowRoomList.action</result>
        </action>

        <!-- Action that displays the list of cohorts. -->
        <action name="ShowCohortList" class="de.nak.scheduling_sloth.action.ShowCohortListAction">
            <result type="tiles">cohortList</result>
            <result type="tiles" name="input">cohortList</result>

        </action>

        <!-- Action that displays a single cohort. -->
        <action name="ShowCohort" class="de.nak.scheduling_sloth.action.ShowCohortAction" method="execute">
            <result type="redirectAction" name="error">ShowCohortList.action</result>
            <result name="success" type="tiles">cohortShow</result>
        </action>

        <!-- Shows the empty form for a new cohort. -->
        <action name="AddCohort">
            <result type="tiles">cohortForm</result>
        </action>

        <!-- Saves the new or updated cohort into the database and shows the cohort list again. -->
        <action name="SaveCohort" class="de.nak.scheduling_sloth.action.CohortAction" method="save">
            <result type="redirect">ShowCohortList.action</result>
            <result type="tiles" name="input">cohortForm</result>
        </action>

        <!-- Loads a existing cohort and shows it in the cohort form. -->
        <action name="EditCohort" class="de.nak.scheduling_sloth.action.CohortAction" method="load">
            <result type="redirectAction" name="error">ShowCohortList.action</result>
            <result name="success" type="tiles">cohortForm</result>
            <result name="input" type="chain">ShowCohortList</result>
        </action>

        <!-- Deletes the selected cohort and shows the cohort list again. -->
        <action name="DeleteCohort" class="de.nak.scheduling_sloth.action.CohortAction" method="delete">
            <result type="redirectAction" name="error">ShowCohortList.action</result>
            <result name="success" type="redirectAction">ShowCohortList.action</result>
            <result name="input" type="chain">ShowCohortList</result>
        </action>

        <!-- Action for the cancel button. Is required to avoid stack traces in log. -->
        <action name="CancelCohort" class="de.nak.scheduling_sloth.action.CohortAction" method="cancel">
            <result type="redirect">ShowCohortList.action</result>
        </action>

        <!-- Action that displays the list of centuries. -->
        <action name="ShowCenturyList" class="de.nak.scheduling_sloth.action.ShowCenturyListAction">
            <result type="tiles">centuryList</result>
            <result type="tiles" name="input">centuryList</result>
        </action>

        <!-- Action that displays a single century. -->
        <action name="ShowCentury" class="de.nak.scheduling_sloth.action.ShowCenturyAction" method="execute">
            <result type="redirectAction" name="error">ShowCenturyList.action</result>
            <result name="success" type="tiles">centuryShow</result>
        </action>

        <!-- Shows the empty form for a new century. -->
        <action name="AddCentury" class="de.nak.scheduling_sloth.action.CenturyAction" method="add">
            <result type="tiles">centuryForm</result>
        </action>

        <!-- Saves the new or updated century into the database and shows the century list again. -->
        <action name="SaveCentury" class="de.nak.scheduling_sloth.action.CenturyAction" method="save">
            <result type="redirect">ShowCenturyList.action</result>
            <result type="tiles" name="input">centuryForm</result>
        </action>

        <!-- Loads a existing century and shows it in the century form. -->
        <action name="EditCentury" class="de.nak.scheduling_sloth.action.CenturyAction" method="load">
            <result type="redirectAction" name="error">ShowCenturyList.action</result>
            <result type="tiles" name="success">centuryForm</result>
            <result type="chain" name="input">ShowCenturyList</result>
        </action>

        <!-- Deletes the selected century and shows the century list again. -->
        <action name="DeleteCentury" class="de.nak.scheduling_sloth.action.CenturyAction" method="delete">
            <result type="redirectAction" name="error">ShowCenturyList.action</result>
            <result name="success" type="redirectAction">ShowCenturyList.action</result>
            <result name="input" type="chain">ShowCenturyList</result>
        </action>

        <!-- Action for the cancel button. Is required to avoid stack traces in log. -->
        <action name="CancelCentury" class="de.nak.scheduling_sloth.action.CenturyAction" method="cancel">
            <result type="redirect">ShowCenturyList.action</result>
        </action>

        <!-- Shows the empty form for a new course. -->
        <action name="AddCourse"  class="de.nak.scheduling_sloth.action.CourseAction" method="add">
            <result type="tiles">courseForm</result>
        </action>

        <!-- Saves the new or updated course into the database and shows the course list again. -->
        <action name="SaveCourse" class="de.nak.scheduling_sloth.action.CourseAction" method="save">
            <result type="redirect">Home</result>
            <result type="tiles" name="error">courseLessonForm</result>
            <result type="tiles" name="input">courseLessonForm</result>
        </action>

        <!-- Loads a existing course and shows it in the course form. -->
        <action name="EditCourse" class="de.nak.scheduling_sloth.action.CourseAction" method="load">
            <result type="redirectAction" name="error">Home.action</result>
            <result type="tiles" name="success">courseForm</result>
            <result name="input" type="redirect">Home</result>
        </action>

        <!-- Set recheck status and load the course lessons form. -->
        <action name="EditCourseRecheck" class="de.nak.scheduling_sloth.action.CourseAction" method="recheck">
            <result name="success" type="chain">
                <param name="actionName">EditCourseLessons</param>
                <param name="recheck">true</param>
            </result>
            <result type="redirectAction" name="error">Home.action</result>
        </action>

        <!-- Deletes the selected course and shows the schedule again. -->
        <action name="DeleteCourse" class="de.nak.scheduling_sloth.action.CourseAction" method="delete">
            <result name="error" type="redirect">Home</result>
            <result name="success" type="redirect">Home</result>
            <result name="input" type="redirect">Home</result>
        </action>

        <!-- Action for the cancel button. Is required to avoid stack traces in log. -->
        <action name="CancelCourse" class="de.nak.scheduling_sloth.action.CourseAction" method="cancel">
            <result name="success" type="redirect">Home</result>
        </action>

        <!-- Saves the new or updated lesson into the database and shows the lesson list again. -->
        <action name="EditCourseLessons" class="de.nak.scheduling_sloth.action.CourseAction" method="editLessons">
            <result type="tiles" name="success">courseLessonForm</result>
            <result type="tiles" name="input">courseForm</result>
            <result type="tiles" name="error">courseForm</result>
            <result name="redirect" type="redirect">Home</result>
        </action>

        <!-- Set recheck status and load the course form. -->
        <action name="EditCourseLessonsRecheck" class="de.nak.scheduling_sloth.action.CourseAction" method="recheck">
            <result name="success" type="chain">
                <param name="actionName">SaveCourse</param>
                <param name="recheck">true</param>
            </result>
            <result type="tiles" name="error">courseForm</result>
            <result name="input" type="redirect">Home</result>
        </action>

        <!-- Deletes the selected lesson and shows the lesson list again. -->
        <action name="DeleteCourseLesson" class="de.nak.scheduling_sloth.action.CourseAction" method="deleteLesson">
            <result name="error" type="redirect">Home</result>
            <result name="redirect" type="chain">Home</result>
            <result name="success" type="chain">ShowCourse</result>
            <result name="input" type="redirect">Home</result>
        </action>

        <!-- Action that displays a single century. -->
        <action name="ShowCourse" class="de.nak.scheduling_sloth.action.ShowCourseAction" method="execute">
            <result type="redirectAction" name="error">Home.action</result>
            <result type="tiles">courseShow</result>
        </action>

        <!-- Shows the homepage. -->
        <action name="Home" class="de.nak.scheduling_sloth.action.ShowScheduleAction">
            <result type="tiles">home</result>
            <result type="tiles" name="input">home</result>
        </action>

        <!-- Shows Error Page. -->
        <action name="Error">
            <result type="tiles">error</result>
            <result type="tiles" name="input">error</result>
        </action>

	</package>
</struts>
